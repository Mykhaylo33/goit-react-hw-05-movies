{"version":3,"file":"static/js/186.7a295db4.chunk.js","mappings":"ySAAMA,EAAW,8BACXC,EAAU,mCAEVC,EAAc,mCAAG,WAAOC,GAAP,oEAChBA,EAASC,GADO,sBAEb,IAAIC,MAAM,mCAFG,gCAIdF,EAASG,QAJK,2CAAH,sDAOPC,EAAiB,mCAAG,oGACRC,MAAM,GAAD,OACvBR,EADuB,sCACeC,EADf,oBADG,cACzBE,EADyB,yBAIxBD,EAAeC,IAJS,2CAAH,qDAOjBM,EAAY,mCAAG,WAAOC,GAAP,uFACHF,MAAM,GAAD,OAAIR,EAAJ,mBAAuBU,EAAvB,oBAAqCT,IADvC,cACpBE,EADoB,yBAEnBD,EAAeC,IAFI,2CAAH,sDAKZQ,EAAe,mCAAG,WAAOD,GAAP,uFACNF,MAAM,GAAD,OACvBR,EADuB,mBACJU,EADI,4BACkBT,IAFjB,cACvBE,EADuB,yBAItBD,EAAeC,IAJO,2CAAH,sDAOfS,EAAe,mCAAG,WAAOF,GAAP,uFACNF,MAAM,GAAD,OACvBR,EADuB,mBACJU,EADI,4BACkBT,IAFjB,cACvBE,EADuB,yBAItBD,EAAeC,IAJO,2CAAH,sDAOfU,EAAiB,mCAAG,WAAOC,GAAP,uFACRN,MAAM,GAAD,OACvBR,EADuB,kCACWC,EADX,iCAC2Ca,IAFxC,cACzBX,EADyB,yBAIxBD,EAAeC,IAJS,2CAAH,qD,qJChCf,SAASY,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOC,EAAP,KAAgBC,EAAhB,KAEMC,GADSC,EAAAA,EAAAA,MACQD,QAavB,OAXAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,8GAEHV,EAAAA,EAAAA,IAAgBO,GAFb,OAEhBI,EAFgB,OAGtBL,EAAWK,GAHW,uGAAH,qDAOvBD,GACD,GAAE,CAACH,KAGF,8BACGF,EAAQO,SAAWP,EAAQO,QAAQC,OAAS,GAC3C,wBACGR,EAAQO,QAAQE,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASlB,EAApB,EAAoBA,GAApB,OACnB,2BACE,0BACE,uBAAG,YAAW,IAAEiB,MAElB,0BACE,uBAAG,YAAW,IAAEC,OALXlB,EADU,OAYvB,uBAAG,8CAIV,C,uBCxCD,SAASmB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CACIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CACe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GACzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CACAjB,OAAMkB,EACR,GACF,CACF,C","sources":["api/index.js","components/Reviews/Reviews.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/';\nconst API_KEY = 'f68a95841909bbb245d2b540e82c3a85';\n\nconst handleResponse = async (response) => {\n  if (!response.ok) {\n    throw new Error('Oops... something went wrong...');\n  }\n  return response.json();\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await fetch(\n    `${BASE_URL}3/trending/all/day?api_key=${API_KEY}&language=en-US`\n  );\n  return handleResponse(response);\n};\n\nexport const getMovieById = async (id) => {\n  const response = await fetch(`${BASE_URL}3/movie/${id}?api_key=${API_KEY}`);\n  return handleResponse(response);\n};\n\nexport const getMovieCredits = async (id) => {\n  const response = await fetch(\n    `${BASE_URL}3/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return handleResponse(response);\n};\n\nexport const getMovieReviews = async (id) => {\n  const response = await fetch(\n    `${BASE_URL}3/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return handleResponse(response);\n};\n\nexport const getMoviesBySearch = async (searchQuery) => {\n  const response = await fetch(\n    `${BASE_URL}3/search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}`\n  );\n  return handleResponse(response);\n};\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieReviews } from 'api';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState({});\n  const params = useParams();\n  const movieId = params.movieId;\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const data = await getMovieReviews(movieId);\n        setReviews(data);\n      } catch (error) {}\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.results && reviews.results.length > 0 ? (\n        <ul>\n          {reviews.results.map(({ author, content, id }) => (\n            <li key={id}>\n              <p>\n                <b>Author:</b> {author}\n              </p>\n              <p>\n                <b>Review:</b> {content}\n              </p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </>\n  );\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["BASE_URL","API_KEY","handleResponse","response","ok","Error","json","getTrendingMovies","fetch","getMovieById","id","getMovieCredits","getMovieReviews","getMoviesBySearch","searchQuery","Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","fetchMovieReviews","data","results","length","map","author","content","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}